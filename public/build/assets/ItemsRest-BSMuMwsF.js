var c=Object.defineProperty;var n=(i,o,a)=>o in i?c(i,o,{enumerable:!0,configurable:!0,writable:!0,value:a}):i[o]=a;var s=(i,o,a)=>n(i,typeof o!="symbol"?o+"":o,a);import{m as e}from"./main-6DCdASTx.js";import{B as u}from"./BasicRest-C4m6wu80.js";class m extends u{constructor(){super(...arguments);s(this,"path","items");s(this,"verifyStock",async a=>{try{const{status:t,result:r}=await e.Fetch(`/api/${this.path}/verify-stock`,{method:"POST",body:JSON.stringify(a)});if(!t)throw new Error((r==null?void 0:r.message)??"Ocurrió un error al consultar el stock de los productos");return r.data??[]}catch{return[]}});s(this,"verifyCombo",async a=>{try{const{status:t,result:r}=await e.Fetch(`/api/${this.path}/combo-items`,{method:"POST",body:JSON.stringify(a)});if(!t)throw new Error((r==null?void 0:r.message)??"Ocurrió un error al consultar el combo de los productos");return r.data??[]}catch{return[]}});s(this,"updateViews",async a=>{try{const{status:t,result:r}=await e.Fetch(`/api/${this.path}/update-items`,{method:"POST",body:JSON.stringify(a)});if(!t)throw new Error((r==null?void 0:r.message)??"Ocurrió un error al actualizar");return r.data??[]}catch{return[]}});s(this,"productsRelations",async a=>{try{const{status:t,result:r}=await e.Fetch(`/api/${this.path}/relations-items`,{method:"POST",body:JSON.stringify(a)});if(!t)throw new Error((r==null?void 0:r.message)??"Ocurrió un error al consultar los productos");return r.data??[]}catch{return[]}});s(this,"getVariations",async a=>{try{const{status:t,result:r}=await e.Fetch(`/api/${this.path}/variations-items`,{method:"POST",body:JSON.stringify(a)});if(!t)throw new Error((r==null?void 0:r.message)??"Ocurrió un error al consultar los productos");return r.data??[]}catch{return[]}});s(this,"getColors",async a=>{try{const{status:t,result:r}=await e.Fetch(`/api/${this.path}/colors-items`,{method:"POST",body:JSON.stringify(a)});if(!t)throw new Error((r==null?void 0:r.message)??"Ocurrió un error al consultar los productos");return r.data??[]}catch{return[]}});s(this,"getSizes",async a=>{try{const{status:t,result:r}=await e.Fetch(`/api/${this.path}/sizes-items`,{method:"POST",body:JSON.stringify(a)});if(!t)throw new Error((r==null?void 0:r.message)??"Ocurrió un error al consultar los productos");return r.data??[]}catch{return[]}});s(this,"convertSlugs",async a=>{try{const{status:t,result:r}=await e.Fetch(`/api/${this.path}/convert-slugs`,{method:"POST",body:JSON.stringify(a)});if(!t)throw new Error((r==null?void 0:r.message)??"Ocurrió un error al convertir los slugs");return r}catch{return{status:400,data:{}}}})}}export{m as I};
